name: Pulp CI
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 3:00 UTC daily
    - cron: '00 3 * * *'
jobs:
  insta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Setup a minikube docker env
        run: minikube -p minikube docker-env | grep "export" | awk '{$1= ""; print $0}' >> $GITHUB_ENV
      - name: Build Operator
        run: |
          echo ::group::SDK
          CURRENT_VERSION=$(head -1 ./build/Dockerfile  | cut -d ":" -f 2)
          sudo wget https://github.com/operator-framework/operator-sdk/releases/download/$CURRENT_VERSION/operator-sdk-$CURRENT_VERSION-x86_64-linux-gnu -O /usr/local/bin/operator-sdk
          sudo chmod +x /usr/local/bin/operator-sdk
          echo ::endgroup::
          eval $(minikube -p minikube docker-env)
          sudo -E operator-sdk build quay.io/pulp/pulp-operator:latest
          sudo -E docker images
        shell: bash
      - name: Test insta-demo
        run: sudo -E insta-demo/pulp-insta-demo.sh -m
        shell: bash
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-operator -c pulp-operator --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-api --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-content --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-worker --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-resource-manager --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-web --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/

  components:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000
        # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Setup a minikube docker env
        run: minikube -p minikube docker-env | grep "export" | awk '{$1= ""; print $0}' >> $GITHUB_ENV
      - name: Build Operator
        run: |
          echo ::group::SDK
          CURRENT_VERSION=$(head -1 ./build/Dockerfile  | cut -d ":" -f 2)
          sudo wget https://github.com/operator-framework/operator-sdk/releases/download/$CURRENT_VERSION/operator-sdk-$CURRENT_VERSION-x86_64-linux-gnu -O /usr/local/bin/operator-sdk
          sudo chmod +x /usr/local/bin/operator-sdk
          echo ::endgroup::
          eval $(minikube -p minikube docker-env)
          sudo -E operator-sdk build quay.io/pulp/pulp-operator:latest
          sudo -E docker images
        shell: bash
      - name: Deploy pulp-operator to K8s
        run: sudo -E ./up.sh
        shell: bash
      - name: Check and wait pulp-operator deploy
        run: .ci/scripts/pulp-operator-check-and-wait.sh -m
        shell: bash
      - name: Test all components
        run: |
          git clone --depth=1 https://github.com/pulp/pulp_file.git
          .ci/scripts/retry.sh 3 ".ci/scripts/pulp_file-tests.sh -m"
        shell: bash
        env:
          PY_COLORS: '1'
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-operator -c pulp-operator --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-api --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-content --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-worker --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-resource-manager --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-web --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/

  galaxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000
        # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Setup a minikube docker env
        run: minikube -p minikube docker-env | grep "export" | awk '{$1= ""; print $0}' >> $GITHUB_ENV
      - name: Build Operator
        run: |
          echo ::group::SDK
          CURRENT_VERSION=$(head -1 ./build/Dockerfile  | cut -d ":" -f 2)
          sudo wget https://github.com/operator-framework/operator-sdk/releases/download/$CURRENT_VERSION/operator-sdk-$CURRENT_VERSION-x86_64-linux-gnu -O /usr/local/bin/operator-sdk
          sudo chmod +x /usr/local/bin/operator-sdk
          echo ::endgroup::
          eval $(minikube -p minikube docker-env)
          sudo -E operator-sdk build quay.io/pulp/pulp-operator:latest
          sudo -E docker images
        shell: bash
      - name: Deploy pulp-operator to K8s
        run: sudo -E CI_TEST=galaxy ./up.sh
        shell: bash
      - name: Check and wait pulp-operator deploy
        run: .ci/scripts/pulp-operator-check-and-wait.sh -m
        shell: bash
      - name: Test
        run: sudo -E .ci/scripts/galaxy_ng-tests.sh -m
        shell: bash
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-operator -c pulp-operator --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-api --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-content --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-worker --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-resource-manager --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-web --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/

  molecule:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Install
        run: |
          pip install --upgrade pip
          sudo apt remove ansible
          pip install "ansible<4.0" molecule[docker,lint]==3.2.3 openshift==0.11.0 jmespath pipdeptree
          pipdeptree
      - name: Molecule
        run: .ci/scripts/molecule.sh
        shell: bash
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: After failure
        if: failure()
        run: |
          docker exec -it osdk-test-control-plane journalctl -S today --no-pager

  deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # Testing different python versions because of
      # https://pulp.plan.io/issues/5768#note-17
      matrix:
        include:
          - CI_TEST: true
          - CI_TEST: galaxy
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000
        # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Setup a minikube docker env
        run: minikube -p minikube docker-env | grep "export" | awk '{$1= ""; print $0}' >> $GITHUB_ENV
      - name: Build Operator
        run: |
          echo ::group::SDK
          CURRENT_VERSION=$(head -1 ./build/Dockerfile  | cut -d ":" -f 2)
          sudo wget https://github.com/operator-framework/operator-sdk/releases/download/$CURRENT_VERSION/operator-sdk-$CURRENT_VERSION-x86_64-linux-gnu -O /usr/local/bin/operator-sdk
          sudo chmod +x /usr/local/bin/operator-sdk
          echo ::endgroup::
          eval $(minikube -p minikube docker-env)
          sudo -E operator-sdk build quay.io/pulp/pulp-operator:latest
          sudo -E docker images
        shell: bash
      - name: Setting secrets
        run: python3 .github/workflows/scripts/secrets.py "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: Deploy
        run: |
          git clone --depth=1 https://github.com/pulp/pulp_file.git
          CI_TEST=${{ matrix.CI_TEST }} .ci/scripts/deploy.sh -m
        shell: bash
      - id: latest_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: draft
      - name: Define QUAY_IMAGE_TAG environment variable
        run: |
          echo "QUAY_IMAGE_TAG=${{steps.latest_release.outputs.release}}-$(date +%j)" >> $GITHUB_ENV
          echo "QUAY_EXPIRE=14" >> $GITHUB_ENV
        shell: bash
      - name: Deploy tagged nightly build
        run: CI_TEST=${{ matrix.CI_TEST }} .ci/scripts/deploy.sh -m
        shell: bash
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-operator -c pulp-operator --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-api --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-content --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-worker --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-resource-manager --tail=10000
          sudo -E kubectl logs -l app.kubernetes.io/name=pulp-web --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/
