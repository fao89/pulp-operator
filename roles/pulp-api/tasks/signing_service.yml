---
- name: Get GPG key ID
  block:
  - name: Inspect galaxy signing service GPG key file
    shell: >
      {{ __pulp_gpg_inspect_command }}
      /etc/pulp/keys/galaxy_signing_service.gpg | grep -m1 -o -E
      '[A-F0-9]{4} [A-F0-9]{4} [A-F0-9]{4} [A-F0-9]{4} [A-F0-9]{4}  [A-F0-9]{4} [A-F0-9]{4} [A-F0-9]{4} [A-F0-9]{4} [A-F0-9]{4}'
      | tr -d " "
    register: galaxy_signing_key
    changed_when: false
    failed_when: galaxy_signing_key.stdout | length != 40
    check_mode: false

  - name: Import galaxy signing service GPG key file
    command: gpg --batch --import /etc/pulp/keys/galaxy_signing_service.gpg
    register: result
    # Imported successfully: rc 0
    # Already imported: rc 2
    # If you try to import multiple keys but only some need to be imported: rc 2
    changed_when: result.stderr is search("imported:")
    failed_when: result.rc not in [0,2]

  - name: Trust the galaxy signing service GPG key
    # When using this syntax, "ultimate" trust == 6
    shell: >
      echo {{ galaxy_signing_key.stdout }}:6 | gpg --import-ownertrust
    register: result
    # changed messages can be either:
    # gpg: inserting ownertrust of 6
    # gpg: changing ownertrust from 3 to 6
    changed_when: "'ownertrust' in result.stderr"

  - name: Set environment variable for the GPG key ID
    set_fact:
        signing_key_fingerprint: "{{ galaxy_signing_key.stdout }}"
        cacheable: yes

  when: signing_key_fingerprint is undefined
